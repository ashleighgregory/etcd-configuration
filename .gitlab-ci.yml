stages:
  - Build
  - Package

before_script:
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - >
    if [ -z "$CROSS_CLOUD_YML" ]; then
       if [ "$BASE_URL" == "https://gitlab.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/production/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.staging.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/staging/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.cidev.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/integration/cross-cloud.yml"
       else
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/master/cross-cloud.yml"
       fi
    else
      export CROSS_CLOUD_YML="$CROSS_CLOUD_YML"
    fi
  - >
    if ruby -v ; then
        echo 'Ruby found, not using rvm'
        cp -a /opt/local/dashboard /dashboard 
        pushd /dashboard
        source /opt/local/.env
        bundle install
        ./bin/update_dashboard
        popd
    else
       source /opt/local/etc/rvmrc
       source /opt/local/etc/profile.d/rvm.sh
       cp -a /opt/local/dashboard /dashboard
       pushd /dashboard
       source /opt/local/.env
       ./bin/update_dashboard
       popd
    fi

compile:
  stage: Build
  image: "crosscloudci/debian-ruby-docker"
  script:
    - curl -X GET "http://dev.vulk.co:4004/ci_status_build/commit_ref?project=ciproject&ref=834f6f1&arch=AMD64" 
    - curl -X GET "http://dev.vulk.co:4004/ci_status_build/commit_ref?project=ciproject&ref=834f6f1&arch=ARM64"

  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - "*gem"
      - "vendor"
      - Gemfile.lock

container-arm:
  tags:
    - arm
  stage: Package
  image: crosscloudci/debian-docker:arm64
  only:
    variables:
      - $ARCH == "arm64"
  dependencies:
    - compile-arm
  script:
    - apt update && apt -y install curl jq git make
    - git clone https://github.com/fluent/fluentd-docker-image.git
    - pushd fluentd-docker-image
    - sed -i "4s|.*|FROM arm64v8/ruby:2.6.3-alpine3.9|" v1.4/alpine/Dockerfile
    - export IMAGE_TAG="${CI_COMMIT_REF_SLUG}.${CI_PIPELINE_ID}.${CI_COMMIT_SHA_SHORT}.${ARCH}"
    - sed -i s/"gem install fluentd -v 1.4.2"/"gem install fluentd-$ARCH -v $CI_PIPELINE_ID --source https:\/\/gem.fury.io\/cncf\/"/g v1.4/alpine/Dockerfile
    - make image IMAGE_NAME="$CI_REGISTRY_IMAGE" X86_IMAGES=v1.4/alpine:"$IMAGE_TAG"
    - popd
    - git clone https://github.com/fluent/fluentd-kubernetes-daemonset.git
    - pushd fluentd-kubernetes-daemonset
    - sed -i "4s|.*|FROM $CI_REGISTRY_IMAGE:$IMAGE_TAG|" docker-image/v0.12/alpine-syslog/Dockerfile
    - make image IMAGE_NAME="$CI_REGISTRY_IMAGE/daemonset" DOCKERFILE=v0.12/alpine-syslog VERSION="$IMAGE_TAG"
    - popd
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG" 
    - docker push "$CI_REGISTRY_IMAGE/daemonset:$IMAGE_TAG" 
    - echo export IMAGE_ARGS=\"--set image=$CI_REGISTRY_IMAGE\" | tee release.env
    - echo export TAG_ARGS=\"--set imageTag=$IMAGE_TAG\" | tee -a release.env
    - cat release.env

  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - release.env

container:
  stage: Package
  image: crosscloudci/debian-docker
  only:
    variables:
      - $ARCH == "amd64"
  dependencies:
    - compile
  script:
    - apt update && apt -y install curl jq git make
    - git clone https://github.com/fluent/fluentd-docker-image.git
    - pushd fluentd-docker-image
    - export IMAGE_TAG="${CI_COMMIT_REF_SLUG}.${CI_PIPELINE_ID}.${CI_COMMIT_SHA_SHORT}.${ARCH}"
    - sed -i s/"gem install fluentd -v 1.4.2"/"gem install fluentd-$ARCH -v $CI_PIPELINE_ID --source https:\/\/gem.fury.io\/cncf\/"/g v1.4/alpine/Dockerfile
    - make image IMAGE_NAME="$CI_REGISTRY_IMAGE" X86_IMAGES=v1.4/alpine:"$IMAGE_TAG"
    - popd
    - git clone https://github.com/fluent/fluentd-kubernetes-daemonset.git
    - pushd fluentd-kubernetes-daemonset
    - sed -i "4s|.*|FROM $CI_REGISTRY_IMAGE:$IMAGE_TAG|" docker-image/v0.12/alpine-syslog/Dockerfile
    - make image IMAGE_NAME="$CI_REGISTRY_IMAGE/daemonset" DOCKERFILE=v0.12/alpine-syslog VERSION="$IMAGE_TAG"
    - popd
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG" 
    - docker push "$CI_REGISTRY_IMAGE/daemonset:$IMAGE_TAG" 
    - echo export IMAGE_ARGS=\"--set image=$CI_REGISTRY_IMAGE\" | tee release.env
    - echo export TAG_ARGS=\"--set imageTag=$IMAGE_TAG\" | tee -a release.env
    - cat release.env

  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - release.env
